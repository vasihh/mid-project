{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class BagService {\n  constructor() {\n    this.bagCount = 0;\n    this.bagCountChanged = new EventEmitter();\n  }\n  addTobag() {\n    this.bagCount++;\n    this.bagCountChanged.emit(this.bagCount); // Emit the event\n  }\n\n  getBagCount() {\n    return this.bagCount;\n  }\n  static #_ = this.ɵfac = function BagService_Factory(t) {\n    return new (t || BagService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BagService,\n    factory: BagService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["EventEmitter","BagService","constructor","bagCount","bagCountChanged","addTobag","emit","getBagCount","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\vasi\\Desktop\\angular 2024\\project_mid\\src\\app\\bag.service.ts"],"sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BagService {\n  bagCount = 0;\n  bagCountChanged = new EventEmitter<number>();\n\n  addTobag() {\n    this.bagCount++;\n    this.bagCountChanged.emit(this.bagCount); // Emit the event\n  }\n\n  getBagCount(): number {\n    return this.bagCount;\n  }\n}\n"],"mappings":"AAAA,SAAqBA,YAAY,QAAQ,eAAe;;AAKxD,OAAM,MAAOC,UAAU;EAHvBC,YAAA;IAIE,KAAAC,QAAQ,GAAG,CAAC;IACZ,KAAAC,eAAe,GAAG,IAAIJ,YAAY,EAAU;;EAE5CK,QAAQA,CAAA;IACN,IAAI,CAACF,QAAQ,EAAE;IACf,IAAI,CAACC,eAAe,CAACE,IAAI,CAAC,IAAI,CAACH,QAAQ,CAAC,CAAC,CAAC;EAC5C;;EAEAI,WAAWA,CAAA;IACT,OAAO,IAAI,CAACJ,QAAQ;EACtB;EAAC,QAAAK,CAAA,G;qBAXUP,UAAU;EAAA;EAAA,QAAAQ,EAAA,G;WAAVR,UAAU;IAAAS,OAAA,EAAVT,UAAU,CAAAU,IAAA;IAAAC,UAAA,EAFT;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}